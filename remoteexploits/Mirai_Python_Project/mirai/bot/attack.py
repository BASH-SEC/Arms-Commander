# Required python libraries for attack.py
import socket
import os
import sys
from termcolor import colored
import StringIO
import time

# need to find Python equivalent libraries for these

import stdio
import stdlib
import unistd
# need to find Python equivalent libraries for these

import includes
import killer
import main
import protocol
import rand
import resolv
import scanner
import table
import util

int(methods_len) = 0
str(attack_method) = NULL
int(attack_ongoing[ATTACK_CONCURRENT_MAX]) = 0

class add_attack(attack_vector, attack_func):
    return

class free_options(attack_options, length):
    return

def attack_init():
    return True

def attack_kill_all():
    return

def scanner_init():
    return

def attack_parse(buffer,length):
    return

def attack_start(attack_duration, attack_vector, target_length, attack_targets, options_length, attack_options):
    return

def util_atoi(value, number): # the C code is calling upon another function in anothern program
    return
def attack_get_option_strings(options_length, attack_options):
    return attack_options_strings

def attack_get_option_integers(options_length, attack_options):
    return util.util_atoi(val, 10)

def attack_get_option_IP(options_length, attack_options):
    return return inet_addr(val) # this aprt is in the scanner.c

class add_attack(attack_vector, attack_func):
    return

class free_options(attack_options, length):
    return
