#!/usr/bin/env python
# coding=UTF-8

#The first line allows this script to be executable

import os
import socket
import operator
from termcolor import colored
import sys
# sys.stdout.write("\x1b[8;{rows};{cols}t".format(rows=64, cols=200)) # sets window to full screen
import remote_exploit_toolkits

def main(): # this entire thing needs to be scrapped and rewritten I keep getting  AttributeError: 'function' object has no attribute 'get_var_python_mailer' problems
    py_mailer_save_file = '/root/ArmsCommander/remoteexploits/py_mailer_save.csv'

    print colored('PYTHON HTML MASS-MAILER','cyan',attrs=['bold'])
    remote_exploits_dir = '/root/ArmsCommander/remoteexploits'
    opt_List = [
        '\n\t#0. Return to Remote Exploit Toolkits Menu',
        '#1. START a mass-mailer attack with HTML based mail',
        '#2. CONFIGURE Python Mailer, including editing the FROM address and name',
        '#3. VIEW the smtpctl QUEUE',
        '#4. SHOW the smtpctl stats (bounced, failures, timeouts, successful, etc.)',
        '#5. MONITOR, smtpctl monitor (in real time), refer to man page for what all the columns mean',
        '#6. REPEAT the same mass-mailer attack by using the temporary save file (requires #1 to be done first)',
        '#7. CLEAR your envelope cache, sometimes the queue gets frozen or stuck',
        '#8. RESTART the opensmtpd service, this may work with #7 in freeing up stuck queues',
        '#INSTALL, Install Python-Mailer and the opensmtpd service'
    ]

    print ("\n\t".join(opt_List))
    opt_Choice = str(raw_input("Enter a OPTION: "))

    if opt_Choice == "1":
        print colored('Restarting opensmtpd service','yellow',attrs=['bold'])
        os.system('service opensmtpd restart')
        remote_exploit_toolkits.get_var_python_mailer()
        main()
    elif opt_Choice == "2":
        os.system('leafpad /root/ArmsCommander/remoteexploits/python-mailer/config.py')
        main()
    elif opt_Choice == "3":
        os.system('clear')
        os.system('sudo smtpctl show queue')
        main()
    elif opt_Choice == "4":
        os.system('clear')
        os.system('sudo smtpctl show stats')
        main()
    elif opt_Choice == "5":
        os.system('clear')
        os.system('sudo smtpctl monitor')
        main()
    elif opt_Choice == "6":
        os.system('clear')
        remote_exploit_toolkits.read_savefile_python_mailer(py_mailer_save_file)
        main()
    elif opt_Choice == "7":
        os.system('clear')
        os.system('sudo smtpctl remove')
        main()
    elif opt_Choice == "8":
        os.system('clear')
        os.system('sudo service opensmtpd restart')
        main()
    elif opt_Choice == "INSTALL":
        os.system('clear')
        os.chdir(remote_exploits_dir)
        os.system('git clone https://github.com/qoda/python-mailer')
        print colored('Updating APT repo','red',attrs=['bold'])
        os.system('sudo apt-get update')
        print colored('Installing opensmtpd','red',attrs=['bold'])
        os.system('sudo apt-get install opensmtpd')
        main()
    elif opt_Choice == "0":
        os.system('clear')
        remote_exploit_toolkits()
    else:
        print colored('You have entered a INVALID OPTION','red',attrs=['bold'])
        main()
    return subject_title, victim_wordlist, html_file, py_mailer_save_file
main()
