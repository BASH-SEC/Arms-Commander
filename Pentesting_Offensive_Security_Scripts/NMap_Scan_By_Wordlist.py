#!/usr/bin/env python
# coding=UTF-8


#This is the Main Menu for Offsec Script sthat I found useful also includes commands including my own modifications and automated upgrades I done

import os
import validators
import sys
import socket
from termcolor import colored
import re

def yellow(string):
    string = colored('%s','yellow',attrs=['bold']) % string
    return string

def red(string):
    string = colored('%s','red',attrs=['bold']) % string
    return string
def green(string):
    string = colored('%s','green',attrs=['bold']) % string
    return string
def cyan(string):
    string = colored('%s','cyan',attrs=['bold']) % string
    return string


def data_entry_loop():
    wordlist_rw = '/root/ArmsCommander/Pentesting_Offensive_Security_Scripts/nmap_wl_scan_wordlist'
    print """
    \n\n\n\t\t\t COMMANDS \n\n\n
    \t DONE = Go back to Main Menu and START the nmap smtp open relay scan
    \t CLEAR = Fully wipe the wordlist and start from scratch
    \t SHOW = Show the contents of the wordlist
    \t ENTER = Enter a IP Address
    """
    cyan('Please type in ALL CAPS and press ENTER')

    new_IP_addr = str(raw_input("Enter a listed command: "))

    if new_IP_addr == "ENTER":
        new_IP_addr = str(raw_input(cyan("Enter the IP address/range you want to add: ")))
        cmd_string = 'echo %s >> %s' % (new_IP_addr, wordlist_rw)
        os.system(cmd_string)
        print red(cmd_string)
        data_entry_loop()
    elif new_IP_addr == "DONE" or "done":
        main()
    elif new_IP_addr == "CLEAR":
        cmd_string = "echo > %s" % wordlist_rw
        os.system(cmd_string)
        print red(cmd_string)
        data_entry_loop()
    elif new_IP_addr == "SHOW":
        cmd_string = "cat %s" % wordlist_rw
        os.system(cmd_string)
        print red(cmd_string)
        data_entry_loop()
    return

def nmap_smtp_open_relay_scan():
    wordlist_rw = '/root/ArmsCommander/Pentesting_Offensive_Security_Scripts/nmap_wl_scan_wordlist'
    r = open(wordlist_rw,'r')
    with open(wordlist_rw,'r') as r:
        line = r.readline().strip()
        for line in r:
            try:
                cmd_string = "proxychains nmap -v -p 25,26,465,587 --script=smtp-open-relay.nse %s" % line
                print cmd_string
                os.system(cmd_string)
            except Exception:
                pass
        main()
    return

def nmap_ftp_vulnerability_scan():
    return

def main():
    print """

    #0. Return Main Menu
    #1. Edit the Wordlist
    #2. Run a NMap Scan for vulnerable Open SMTP Relays with the wordlist
    #3. Run a NMap Scan for vulnerable anonymous FTP Logins with the wordlist
    
    """

    opt_choice = str(raw_input("Enter a OPTION: "))

    if opt_choice == "1":
        os.system('clear')
        data_entry_loop()
        main()
    elif opt_choice == "2":
        os.system('clear')
        nmap_smtp_open_relay_scan()
        main()
    elif opt_choice == "3":
        return
    else:
        red('You have entered a invalid option')
        main()
    return
main()
