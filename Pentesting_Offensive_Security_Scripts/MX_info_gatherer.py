#!/usr/bin/env python
# coding=UTF-8


#This is the Main Menu for Offsec Script sthat I found useful also includes commands including my own modifications and automated upgrades I done

import os
import validators
import sys
import socket
from termcolor import colored
import re
import subprocess
from subprocess import Popen
import threading

def yellow(string):
    string = colored('%s','yellow',attrs=['bold']) % string
    print string
    return string

def red(string):
    string = colored('%s','red',attrs=['bold']) % string
    print string
    return string
def green(string):
    string = colored('%s','green',attrs=['bold']) % string
    print string
    return string
def cyan(string):
    string = colored('%s','cyan',attrs=['bold']) % string
    print string
    return string


wordlist = '/root/ArmsCommander/Pentesting_Offensive_Security_Scripts/mx_info_gatherer_wordlist'
save_file = '/root/ArmsCommander/logs/Offensive_Security/mx_info_gatherer_save_file.txt'

def search_wordlist(wordlist):
    os.system('mkdir /root/ArmsCommander/logs/Offensive_Security/')
    r = open(wordlist,'r')
    with open(wordlist,'r') as r:
        line = r.readline().strip()
        for line in r:
            try:
                domain = str(line)
                # yellow('Now running nameserver and MX record search on: %s') % domain
                cmd_string = "host -t ns %s >> %s" % (domain, save_file)
                red(cmd_string)
                os.system(cmd_string)
                cmd_string = "host -t mx %s >> %s" % (domain, save_file)
                red(cmd_string)
                os.system(cmd_string)
                # green('Save file written to %s') % save_file
            except Exception:
                pass
        main()


def edit_wordlist(wordlist):
    cmd_string = "leafpad %s" % wordlist
    os.system(cmd_string)
    main()
    return

def main():
    print """
    #0. Return to Main MENU
    #1. Edit the wordlist
    #2. Search by wordlist for MX and NS records (Mail Exchange and Nameserver Records)
    """

    opt_choice = str(raw_input("Enter a OPTION: "))

    if opt_choice == "1":
        edit_wordlist(wordlist)
    elif opt_choice == "2":
        search_wordlist(wordlist)
    else:
        red('You have entered a invalid option')
        main()
    return
main()
